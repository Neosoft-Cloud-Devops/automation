---


# - name: make a rule
   #   ec2_group:
   #           aws_access_key: "{{ aws_access_key }}"
   #           aws_secret_key: "{{ aws_secret_key }}"
   #        #   key_name: "{{ keypair }}"
   #           name: web-hosting  
   #           vpc_id: vpc-500d542a
   #           region: "{{ region }}"
   #           rules:
   #            - proto: ssh
   #              ports:
   #               - 22
   #              cidr_ip: 0.0.0.0/0
   #            - proto: tcp
   #              ports:
   #               - 80
   #              cidr_ip: 0.0.0.0/0  
   #              #   state: present 
 - name: Launch instance
   ec2:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      key_name: "{{ keypair }}"
      instance_type: "{{ instance_type }}"
      image: "{{ ami }}"
      user_data: "{{ lookup('file', 'files/user-data.sh') }}"
      wait: true
      group: web-hosting
      wait_timeout: 600
      region: "{{ region }}"
      vpc_subnet_id: "{{ subnet }}"
      count: 1
      assign_public_ip: yes
      instance_tags: Name=web-hosting
   register: ec2
 
 

 - name: Associating after allocating elastic IP
   ec2_eip:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      in_vpc: yes
      reuse_existing_ip_allowed: yes
      state: present
      region: "{{ region }}"
      device_id: "{{ ec2.instance_ids[0] }}"
   register: eip 

 - name: output the IP
   debug: 
      msg: "Allocated IP is {{ eip.public_ip }}"


 - name: Add new instance to host group
   add_host:
            hostname: "{{ eip.public_ip }}"
            groupname: launched
            inventory_dir: /etc/ansible/hosts
            state: present
  



   # - name: add ip
   #   lineinfile:
   #              path: /etc/ansible/hosts
   #              regexp: '^[new_servers]  '
   #              line:
   #                    "{{ eip.public_ip }}"
   #              insertafter: '^[new_servers]'
   #              # create: yes
   #   become: yes
   #   with_items: "{{ ec2.instances }}"
   #   become: yes
  

 - name: zone to be added
   route53_zone:
                region: us-east-1
                aws_access_key: AKIA5WRIVFTK6JZGJLFV
                aws_secret_key: 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
                zone: wordsinfinite.ml
                state: present




 - name: add domain name
   route53:
                    # region: us-east-1
                aws_access_key: AKIA5WRIVFTK6JZGJLFV
                aws_secret_key: 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
                command: create
                state: present
                zone: wordsinfinite.ml
                ttl: 60
                type: A
                value: "{{ eip.public_ip }}"
                record: wordsinfinite.ml
                overwrite: yes


 - name: add dns in route53
   route53:
                aws_access_key: AKIA5WRIVFTK6JZGJLFV
                aws_secret_key: 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
                command: create
                state: present
                zone: wordsinfinite.ml
                ttl: 60
                type: CNAME
                value: wordsinfinite.ml
                record: www.wordsinfinite.ml
                overwrite: yes

